// f637
// DF-express (深度優先圖像表示式) 是一個具有高度資料壓縮能力的四元樹表示法。雖然主要為二階黑白圖片所設計，但是透過位元平面 (bit-plane) 或是 3D 表示法，亦可用來壓縮灰階圖片。
   本題中所處理的圖片為二階的黑白圖片，也就是每個像素非黑即白，沒有中間的灰色。圖片大小為 𝑛×𝑛，𝑛 是 2 的冪次，也就是存在某個非負整數 𝑘 使得 𝑛 = 2𝑘。
   一個 𝑛×𝑛 的黑白影像可以用下列遞迴方式編碼：
   如果每一格像素都是白色，我們用0來表示； 如果每一格像素都是黑色，我們用1來表示； 
   否則，並非每一格像素都同色，先將影像均等劃分為四個邊長為 𝑛/2 的小正方形後，然後表示如下：先寫下2，之後依續接上左上、右上、左下、右下四塊的編碼。
---------------------------------------------------------
#include<iostream>
#include<string>
using namespace std;

int decode(int n);  // 遞迴副程式(正方形的邊長)

string s;  // 讀取深度優先表示式的編碼字串
int p = -1; // 讀取編碼的指標
int main(){
    int n;     // 正方形影像邊長
    cin >> s >> n;
    cout << decode(n) << "\n";
    return 0;
}

int decode(int n) {
    int black = 0;  // 紀錄黑色像素數量的變數
    p++;            // 編碼指標移動
    if (s[p] == '0')   // 0: 白色像素
        black = 0;
    else if (s[p] == '1')   // 1: 黑色像素
        black = n * n;
    else {                  // 2: 將正方形分成4塊
        for (int i = 0; i < 4; i++)
            black = black + decode(n / 2);
    }
    return black;
}
