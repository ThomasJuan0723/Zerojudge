// f166
#include<iostream>
#include<queue>
using namespace std;
int S[1000000];        //場地最大格子數量
int dis[1000000];       //顯示走到該格子的回合數

int main() {
    // n:場地格數; P:目的地; L & R:往左/右移動的格數 
    int n, P, L, R;
    // s:角色當前所在格子編號; sL & sR: 角色往左/右移動後的格子編號 
    int s, sL, sR;
    queue<int> q;      // q:紀錄未走過的佇列變數 
    // 輸入 n P L R 以及每個格子傳送到的格子編號
    // 讀取基本資料 & 場地傳送編號
    cin >> n >> P >> L >> R;
    for (int i = 0; i < n; i++)    cin >> S[i];
    //開始處理角色移動
    q.push(0);  //設置起點
    while (1) {
        //結束迴圈條件1:無法到達目的地P
        if (q.empty()) {
            cout << -1;
            break;
        }
        //結束迴圈條件2:到達目的地P 
        s = q.front();  q.pop();  //取得當下位置
        if (s == P) {
            cout << dis[s];
            break;
        }
        //往左移動
        sL = s - L;
        if (sL >= 0) {
            sL = S[sL];     //處理傳送 
            //檢查 傳送結果有無出界 且 該格子是否來過 
            if (0 <= sL && sL < n && dis[sL] == 0) {
                dis[sL] = dis[s] + 1;
                q.push(sL);
            }
        }
        //往右
        sR = s + R;
        if (sR < n) {
            sR = S[sR];  //處理傳送 
            //檢查 傳送結果有無出界 且 該格子是否來過 
            if (0 <= sR && sR < n && dis[sR] == 0) {
                dis[sR] = dis[s] + 1;
                q.push(sR);
            }
        }
    }
}
