// e548
// 輸入有多組測資。
   每組測資第一行為一個整數n (1 ≤ n ≤ 1000)。
   接下來n行中，每一行可能是type-1命令，或者是type-2命令
   type-2命令後會跟著一個數字x (0 < x ≤ 100)，x代表拿出來的數字。
// 對於每組測資輸出如下：
   如果神奇袋子一定是stack -> 輸出"stack"
   如果神奇袋子一定是queue -> 輸出"queue"
   如果神奇袋子一定是priority queue -> 輸出"priority queue"
   如果神奇袋子以上三種都不是 -> 輸出"impossible"
   如果神奇袋子不能確定是上述三種的那一種 -> 輸出"not sure"
----------------------------------------------------
#include<iostream>
#include<stack>
#include<queue>
using namespace std;
int main() {
    //讀取命令數
    int n;
    while (cin >> n) {
        //準備前置變數
        //ans[0]: 堆疊; ans[1]: 佇列; ans[2]: 優先佇列
        bool ans[] = { true, true, true };
        stack<int> s;
        queue<int> q;
        priority_queue<int> pq;
        //開始檢查資料結構的型態
        while (n--) {
            int cmd, x;
            cin >> cmd >> x;
            if (cmd == 1) {
                s.push(x);
                q.push(x);
                pq.push(x);
            }
            else {    //cmd == 2
                if (ans[0]) {    //堆疊結構檢查
                    if (!s.empty() && x == s.top()) s.pop();
                    else   ans[0] = false;
                }
                if (ans[1]) {    //佇列結構檢查
                    if (!q.empty() && x == q.front()) q.pop();
                    else   ans[1] = false;
                }
                if (ans[2]) {    //優先佇列檢查
                    if (!pq.empty() && x == pq.top()) pq.pop();
                    else   ans[2] = false;
                }
            }
        }
        //根據 ans 變數輸出結果
        if (ans[0] && !ans[1] && !ans[2])    cout << "stack";
        else if (!ans[0] && ans[1] && !ans[2])    cout << "queue";
        else if (!ans[0] && !ans[1] && ans[2])    cout << "priority queue";
        else if (!ans[0] && !ans[1] && !ans[2])    cout << "impossible";
        else                                    cout << "not sure";
        cout << "\n";
    }
}
